数据生成(保证对)中 可改变 障碍密度 和 测试数据量
生成的数据在 test4 中

图1的测试代码（自动生成的数据）
第一题.cpp 会读取 在 test4 中 的数据
输出到 test4_answer(godsight)

图1的测试代码（试题数据）
将第一题.cpp 中的数据源改为t1p1_in即可
输出到 test4_answer(godsight)

图2的测试代码（试题数据）
用 右图转左图 10x10 实验.html 中的代码处理图片
导出到指定excel后 将数据放入t1p1_in 的数据区 即可
（实际上图1也可以这么解）

图3的测试代码（试题数据）
对应数据 test3

图3的测试代码（自动生成的数据）
对应数据 test2（可用数据生成器生成）

图4的测试代码（试题数据）
用 图4扫描改良改(右图测试).cpp 测试
对应数据 newscan_in 
先用 520校赛 右图转左图 输出100乘100.html 中的python代码处理图片
导出到指定excel后 将数据放入newscan_in 即可

Ktest 是用于计算最优K取值的程序

K改良后：
蚁群算法解决图3：
第二题K.cpp
蚁群算法解决图4：
第二题扫描改良改+K.cpp

